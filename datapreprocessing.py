# -*- coding: utf-8 -*-
"""datapreprocessing.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1rZAc0v9UkZTUKljiOyb6-hNP5WVCkKgC
"""

import pandas as pd
import numpy as np
from scipy.signal import butter, lfilter
import matplotlib.pyplot as plt

## load eegdata
file_path = 'BCICIV_2a_all_patients.csv'

try:
    df = pd.read_csv(file_path)
except Exception as e:
    print(f"Error loading the dataset: {e}")
    exit()

# pritn dataset to make sure in congruent
print("Dataset preview:")
print(df.head())
print()

# data preprocessing, bandpass filter
def butter_bandpass(lowcut, highcut, fs, order=5):
    nyquist = 0.5 * fs
    low = lowcut / nyquist
    high = highcut / nyquist
    b, a = butter(order, [low, high], btype='band')
    return b, a

def bandpass_filter(data, lowcut, highcut, fs, order=5):
    b, a = butter_bandpass(lowcut, highcut, fs, order=order)
    y = lfilter(b, a, data)
    return y

# sample rate 250hz
fs = 250.0
lowcut = 0.5
highcut = 40.0

# the first three columns are not eeg data
eeg_columns = df.columns[3:]
for col in eeg_columns:
    df[col] = bandpass_filter(df[col].values, lowcut, highcut, fs)

#display filtered data
print("Filtered EEG data (first 5 rows of first EEG column):")
print(df[eeg_columns[0]].head())
print()
#display filtered data
plt.figure(figsize=(14, 6))
plt.subplot(2, 1, 1)
plt.plot(df[eeg_columns[0]].values[:1000])
plt.title('Filtered EEG Signal')
plt.xlabel('Samples')
plt.ylabel('Amplitude')
plt.tight_layout()
plt.show()

# normalization
for col in eeg_columns:
    df[col] = (df[col] - df[col].mean()) / df[col].std()


# display normalized eeg data
plt.figure(figsize=(14, 6))
plt.subplot(2, 1, 1)
plt.plot(df[eeg_columns[0]].values[:1000])
plt.title('Normalized EEG Signal')
plt.xlabel('Samples')
plt.ylabel('Amplitude')
plt.tight_layout()
plt.show()

# feature extraction
X = df.drop(columns=['label']).values
y = df['label'].values

# display labels from feature extraction
print("Feature matrix shape:", X.shape)
print("Labels shape:", y.shape)
print("Feature matrix (first 5 rows):")
print(X[:5, :5])
print("Labels (first 5 values):", y[:5])